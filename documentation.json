{
    "pipes": [],
    "interfaces": [
        {
            "name": "Category",
            "id": "interface-Category-74b71963d6c6dad6083ffa8525513d5ec7147b78b8b047bc225de6e7620566470d13a02262124eefb1e0fdfbf41298bef823e6600d6473f6089e3584671c9e17",
            "file": "src/app/core/interfaces/category.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Category{\r\n    id: string;\r\n    name: string;\r\n    image: string;\r\n}",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Film",
            "id": "interface-Film-d2eb0aea7af9d042b6c6ce6cafd42d8ae12ea91b32c7440facc038b81a9ce9dc68a96149557c89f96e23f30fc43078293b3ac9d2c7c1323489b3c058aa802be8",
            "file": "src/app/core/interfaces/film.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Film{\r\n    _id: string;\r\n    id: string;\r\n    title: string;\r\n    creator: string;\r\n    rating: number;\r\n    date: string;\r\n    image: string;\r\n    channel: string;\r\n}",
            "properties": [
                {
                    "name": "_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "channel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "creator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "FilmsController",
            "id": "injectable-FilmsController-81a5d5448895d6b0f1728acae1d6c9db94760b3b370620d5d096fb5cf3fa32d2b51b6fd3d14e1fae9cc293bb0327543a991daad7b3a0f5c87404dfc8b56e4a97",
            "file": "src/app/headless/films.controller.ts",
            "properties": [],
            "methods": [
                {
                    "name": "fetchAllFilms",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Film[]>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "fetchFilmById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Film>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUpcomingEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Film[]>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { FilmsServiceService } from '../core/services/films-service.service';\r\nimport { Film } from '../core/interfaces/film.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FilmsController {\r\n\r\n  constructor(private filmsService: FilmsServiceService) {}\r\n\r\n  async fetchAllFilms(): Promise<Film[]> {\r\n    try {\r\n      const films = await this.filmsService.getAll();\r\n\r\n      return films;\r\n    } catch (error) {\r\n      console.error('Error al obtener las series:', error);\r\n      throw error; \r\n    }\r\n  }\r\n\r\n\r\n  async fetchFilmById(id: string): Promise<Film> {\r\n    try {\r\n      const film = await this.filmsService.getSeriesById(id);\r\n      return film;\r\n    } catch (error) {\r\n      console.error(`Error al obtener la serie con ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getUpcomingEvents(): Promise<Film[]> {\r\n    const films = await this.fetchAllFilms();\r\n    return films.sort((a, b) => {\r\n      const idA = parseInt(a.id, 10);\r\n      const idB = parseInt(b.id, 10);\r\n      return idB - idA;\r\n    });\r\n  }\r\n\r\n  async getUser(): Promise<any> {\r\n    try {\r\n      const user = await this.filmsService.getUser(); \r\n      console.log(\"useeer\",user); // Llamada al método getUser del servicio\r\n      return user;\r\n    } catch (error) {\r\n      console.error('Error al obtener el usuario:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  \r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "filmsService",
                        "type": "FilmsServiceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "filmsService",
                        "type": "FilmsServiceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "FilmsServiceService",
            "id": "injectable-FilmsServiceService-a6611310d78fa3a16249a74b7dcd52baa01b6e8e1d4dd2496d91169045d149b15bb31343dd4c08b677c5f0bc3d975a38a803f7cee13152abe427469ee97bd92f",
            "file": "src/app/core/services/films-service.service.ts",
            "properties": [
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<Film[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSeriesById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<Film>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { inject, Injectable } from '@angular/core';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { Film } from '../interfaces/film.interface';\r\nimport { http, HttpResponse } from 'msw'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class FilmsServiceService {\r\n\r\n  httpClient = inject(HttpClient);\r\n\r\n  getAll(): Promise<Film[]>{\r\n    return firstValueFrom(\r\n     this.httpClient.get<Film[]>('https://peticiones.online/api/series')\r\n    )\r\n  }\r\n\r\n  getSeriesById(id: string): Promise<Film> {\r\n    return firstValueFrom(\r\n      this.httpClient.get<Film>(`https://peticiones.online/api/series/${id}`)\r\n    );\r\n  }\r\n\r\n  getUser(): Promise<any> {\r\n    return firstValueFrom(\r\n      this.httpClient.get('/user')  // URL relativa\r\n    );\r\n  }\r\n  \r\n}\r\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-09867c3c6bd31812cd0b95477d53bf95ae05673734092b176a9e0aa2ec3c23773584718d074755a633ac9071c72b433b2e27485a3fbf2d508d66eec2f50f23fa",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonApp"
                },
                {
                    "name": "IonRouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonApp, IonRouterOutlet } from '@ionic/angular/standalone';\nimport {register} from 'swiper/element/bundle'\n\nregister();\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  standalone: true,\n  imports: [IonApp, IonRouterOutlet],\n})\nexport class AppComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": [],
            "templateData": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "EventPage",
            "id": "component-EventPage-cdf2c85d33d79051de170a9b02188ecbc4bff19ba1ac9e588fbe43bc106933600b3609bbe44cb604a221fd96ab73b7f1d9cdc783374761effa6302a0dcbf4337",
            "file": "src/app/features/home/event/event.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-event",
            "styleUrls": [
                "./event.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./event.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "event",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "filmService",
                    "defaultValue": "inject(FilmsServiceService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonFabButton"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonFooter"
                },
                {
                    "name": "IonText"
                },
                {
                    "name": "IonAvatar"
                },
                {
                    "name": "IonList"
                },
                {
                    "name": "IonListHeader"
                },
                {
                    "name": "IonCard"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonLabel"
                },
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonBackButton"
                },
                {
                    "name": "IonButtons"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "DatePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DatePipe } from '@angular/common';\r\nimport { Component, inject, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport {\r\n  IonContent,\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonBackButton,\r\n  IonItem,\r\n  IonLabel,\r\n  IonRow,\r\n  IonCol,\r\n  IonIcon, IonCard, IonListHeader, IonList, IonAvatar, IonText, IonFooter, IonButton, IonFabButton } from '@ionic/angular/standalone';\r\nimport { addIcons } from 'ionicons';\r\nimport { calendarOutline, heartOutline, locationOutline } from 'ionicons/icons';\r\nimport { FilmsServiceService } from '../../../core/services/films-service.service';\r\nimport { FilmsController } from '../../../headless/films.controller';\r\n\r\n@Component({\r\n  selector: 'app-event',\r\n  templateUrl: './event.page.html',\r\n  styleUrls: ['./event.page.scss'],\r\n  standalone: true,\r\n  imports: [IonFabButton, IonButton, IonFooter, IonText, IonAvatar, IonList, IonListHeader, IonCard, \r\n    IonIcon,\r\n    IonCol,\r\n    IonRow,\r\n    IonLabel,\r\n    IonItem,\r\n    IonBackButton,\r\n    IonButtons,\r\n    IonToolbar,\r\n    IonHeader,\r\n    IonContent,\r\n    DatePipe\r\n  ],\r\n})\r\nexport class EventPage implements OnInit {\r\n  event: any = {};\r\n\r\n  private route = inject(ActivatedRoute);\r\n  filmService = inject(FilmsServiceService)\r\n\r\n  constructor(private filmController: FilmsController) {\r\n    addIcons({ calendarOutline, locationOutline, heartOutline });\r\n  }\r\n\r\n  async ngOnInit() {\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.event = await this.filmController.fetchFilmById(id!);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-header {\r\n    margin: 8px;\r\n    background: transparent;\r\n    ion-toolbar {\r\n      --background: transparent;\r\n      --ion-color-base: transparent;\r\n      ion-buttons {\r\n        background: rgba(209, 204, 204, 0.3);\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n  }\r\n  div.bg-container {\r\n    margin: 8px;\r\n    div.bg {\r\n      width: 100%;\r\n      height: 22rem;\r\n      border-radius: 25px;\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n      background-color: var(--ion-color-light);\r\n    }\r\n  }\r\n  \r\n  ion-item {\r\n    --inner-padding-end: 8px;\r\n    margin: 8px;\r\n    --border-radius: 25px;\r\n    ion-label.eventInfo {\r\n      font-size: 1.4rem;\r\n      font-weight: bold;\r\n      ion-row {\r\n        margin-top: 8px;\r\n        font-size: 0.8rem;\r\n        font-weight: normal;\r\n        color: gray;\r\n        ion-col {\r\n          padding: 0;\r\n          .loc {\r\n            margin-left: 5px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    div[slot=\"end\"] {\r\n      margin: 8px 0;\r\n      background: var(--ion-color-light);\r\n      border-radius: 25px;\r\n      height: 6rem;\r\n      width: 6rem;\r\n      align-content: center;\r\n      ion-label {\r\n        font-size: 1.4rem;\r\n        font-weight: bold;\r\n      }\r\n      p {\r\n        margin: 5px 0 0 0;\r\n        font-size: 0.8rem;\r\n        color: gray;\r\n      }\r\n    }\r\n  }\r\n  \r\n  ion-card {\r\n    --box-shadow: none;\r\n    border-radius: 25px;\r\n    ion-list {\r\n      ion-list-header {\r\n        font-size: 1rem;\r\n        font-weight: bold;\r\n      }\r\n      ion-row {\r\n        margin: 8px;\r\n        ion-col {\r\n          display: flex;\r\n        }\r\n        ion-avatar {\r\n          height: 3rem;\r\n          width: 3rem;\r\n          background: #fff;\r\n          img {\r\n            padding: 2px;\r\n          }\r\n        }\r\n        .participant {\r\n          margin-left: -10px;\r\n          ion-text {\r\n            font-size: 0.8rem;\r\n            font-weight: bold;\r\n          }\r\n        }\r\n        .participant-text {\r\n          ion-label,\r\n          p {\r\n            font-size: 0.8rem;\r\n          }\r\n        }\r\n        .bg-avatar {\r\n          background: var(--ion-color-light);\r\n          height: 2.5rem;\r\n          width: 2.5rem;\r\n          align-content: center;\r\n        }\r\n      }\r\n      .map {\r\n          margin: 0 8px;\r\n          img {\r\n              border-radius: 25px;\r\n          }\r\n      }\r\n    }\r\n  }\r\n  \r\n  ion-footer {\r\n      background: var(--ion-color-light);\r\n      ion-row {\r\n          background: #fff;\r\n          margin: 0 15px;\r\n          padding-right: 10px;\r\n          border-bottom-left-radius: 25px;\r\n          border-bottom-right-radius: 25px;\r\n      }\r\n      ion-col {\r\n          align-content: space-around;\r\n          ion-button {\r\n              ion-text {\r\n                  font-size: 0.9rem;\r\n              }\r\n          }\r\n      }\r\n  }",
                    "styleUrl": "./event.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "filmController",
                        "type": "FilmsController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "filmController",
                        "type": "FilmsController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-content [fullscreen]=\"true\" color=\"light\">\r\n  <ion-header class=\"ion-no-border\" slot=\"fixed\">\r\n    <ion-toolbar>\r\n      <ion-buttons slot=\"start\" mode=\"md\">\r\n        <ion-back-button color=\"light\" defaultHref=\"/home\"></ion-back-button>\r\n      </ion-buttons>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n  <div class=\"bg-container\">\r\n    <div [style.backgroundImage]=\"'url(' + event.image + ')'\" class=\"bg\"></div>\r\n  </div>\r\n\r\n  <ion-item lines=\"none\">\r\n    <ion-label class=\"eventInfo\"> \r\n      {{event.title}} \r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-icon name=\"calendar-outline\"></ion-icon>\r\n          {{event.date | date: 'MMM d, y'}}\r\n          <ion-icon name=\"location-outline\" class=\"loc\"></ion-icon>\r\n          {{event.channel}}\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-label>\r\n\r\n    <div slot=\"end\" align=\"center\">\r\n      <ion-label color=\"primary\"> $45 </ion-label>\r\n      <p>256 seats available</p>\r\n    </div>\r\n  </ion-item>\r\n\r\n  <ion-card>\r\n\r\n    <ion-list>\r\n      <ion-list-header> About Film </ion-list-header>\r\n\r\n      <p class=\"ion-margin-horizontal\">{{event.creator}}</p>\r\n      <p class=\"ion-margin-horizontal\">{{event.rating}}</p>\r\n      <p class=\"ion-margin-horizontal\">{{event.date}}</p>\r\n      <p class=\"ion-margin-horizontal\">{{event.channel}}</p>\r\n\r\n      <ion-row>\r\n        <ion-col class=\"ion-align-items-center\">\r\n          <ion-avatar>\r\n            <img src=\"assets/imgs/avatar1.png\" />\r\n          </ion-avatar>\r\n          <ion-avatar class=\"participant\">\r\n            <img src=\"assets/imgs/avatar2.png\" />\r\n          </ion-avatar>\r\n          <ion-avatar class=\"participant\">\r\n            <img src=\"assets/imgs/avatar3.jpg\" />\r\n          </ion-avatar>\r\n          <ion-avatar class=\"ion-text-center participant bg-avatar\">\r\n            <ion-text color=\"dark\">+2k</ion-text>\r\n          </ion-avatar>\r\n        </ion-col>\r\n\r\n        <ion-col class=\"ion-align-items-center participant-text\">\r\n          <ion-label>\r\n            <ion-text color=\"dark\"><strong>Participant</strong></ion-text>\r\n            <p>All over the world</p>\r\n          </ion-label>\r\n        </ion-col>\r\n      </ion-row>\r\n\r\n      <ion-list-header class=\"ion-align-items-center\">\r\n        Location\r\n      </ion-list-header>\r\n\r\n      <div class=\"map\">\r\n        <img src=\"assets/imgs/maps.png\">\r\n      </div>\r\n\r\n    </ion-list>\r\n  </ion-card>\r\n</ion-content>\r\n\r\n<ion-footer class=\"ion-no-border\">\r\n  <ion-row>\r\n    <ion-col size=\"10\">\r\n      <ion-button\r\n        expand=\"block\"\r\n        shape=\"round\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        [strong]=\"true\"\r\n      >\r\n        <ion-text>Buy Ticket</ion-text>\r\n      </ion-button>\r\n    </ion-col>\r\n    <ion-col size=\"2\">\r\n      <ion-fab-button color=\"light\">\r\n        <ion-icon color=\"primary\" name=\"heart-outline\"></ion-icon>\r\n      </ion-fab-button>\r\n    </ion-col>\r\n  </ion-row>\r\n  <!-- <ion-toolbar>\r\n  </ion-toolbar> -->\r\n</ion-footer>"
        },
        {
            "name": "GenericButtonComponent",
            "id": "component-GenericButtonComponent-92c59fe746182fc5b91798b1a2cb185852038366f23ad629bbd629eda80258cc51aa3409676fd96a5bcfbf5235a9aedc6246245e7c5c168dbe0edc1304c0ef85",
            "file": "src/app/shared/components/generic-button/generic-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-generic-button",
            "styleUrls": [
                "./generic-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./generic-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "expand",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "\"full\" | \"block\" | \"default\"",
                    "decorators": []
                },
                {
                    "name": "routerLink",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"round\" | \"default\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"small\" | \"default\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "strong",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonText"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { IonButton, IonText } from '@ionic/angular/standalone';\r\nimport { RouterModule } from '@angular/router'; // Importar RouterModule\r\n\r\n@Component({\r\n  selector: 'app-generic-button',\r\n  templateUrl: './generic-button.component.html',\r\n  styleUrls: ['./generic-button.component.scss'],\r\n  standalone: true,\r\n  imports: [IonButton, IonText, RouterModule], // Agregar RouterModule aquí\r\n})\r\nexport class GenericButtonComponent {\r\n  @Input() expand: 'full' | 'block' | 'default' = 'default';\r\n  @Input() shape: 'round' | 'default' = 'default';\r\n  @Input() color: string = 'primary';\r\n  @Input() size: 'small' | 'default' | 'large' = 'default';\r\n  @Input() strong: boolean = false;\r\n  @Input() routerLink: string = ''; // Asegúrate de tener el routerLink como @Input\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./generic-button.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n\r\n<ion-button\r\n  [expand]=\"expand\"\r\n  [shape]=\"shape\"\r\n  [color]=\"color\"\r\n  [size]=\"size\"\r\n  [strong]=\"strong\"\r\n  [routerLink]=\"routerLink\"\r\n>\r\n  <ng-content></ng-content> <!-- Proyecta el contenido pasado al componente -->\r\n</ion-button>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HomePage",
            "id": "component-HomePage-c3b5b98536aa5f44707b1573c1311864c919b5451c0dc372c7ec444a2b06ccfafe6416f1c6823ee0c28b457e0a24f98c744996a4a178fb4e182ea11d1aaba7c1",
            "file": "src/app/features/home/home.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "home.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "home.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Category[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "currentFilms",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Film[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "swiperModules",
                    "defaultValue": "[IonicSlides]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "upcomingEvents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Film[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonCard"
                },
                {
                    "name": "IonList"
                },
                {
                    "name": "IonListHeader"
                },
                {
                    "name": "IonSearchbar"
                },
                {
                    "name": "IonCol"
                },
                {
                    "name": "IonRow"
                },
                {
                    "name": "IonBadge"
                },
                {
                    "name": "IonFabButton"
                },
                {
                    "name": "IonText"
                },
                {
                    "name": "IonIcon"
                },
                {
                    "name": "IonLabel"
                },
                {
                    "name": "IonItem"
                },
                {
                    "name": "IonHeader"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonTitle"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "DatePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA, OnInit } from '@angular/core';\nimport { IonHeader, IonToolbar, IonTitle, IonContent, IonItem, IonLabel, IonIcon, IonText, IonFabButton, IonBadge, IonRow, IonCol, IonSearchbar, IonicSlides, IonListHeader, IonList, IonCard } from '@ionic/angular/standalone';\nimport { addIcons } from 'ionicons';\nimport { arrowForwardOutline, locateOutline, locationOutline, notificationsOutline, optionsOutline } from 'ionicons/icons';\nimport { Category } from '../../core/interfaces/category.interface';\nimport { categories } from '../../core/data/categories';\nimport { RouterLink } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { Film } from '../../core/interfaces/film.interface';\nimport { FilmsController } from '../../headless/films.controller';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n  standalone: true,\n  imports: [\n    IonCard,\n    IonList,\n    IonListHeader,\n    IonSearchbar,\n    IonCol,\n    IonRow,\n    IonBadge,\n    IonFabButton,\n    IonText,\n    IonIcon,\n    IonLabel,\n    IonItem,\n    IonHeader,\n    IonToolbar,\n    IonTitle,\n    IonContent,\n    RouterLink,\n    DatePipe,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class HomePage implements OnInit {\n  swiperModules = [IonicSlides];\n  upcomingEvents: Film[] = [];\n  currentFilms: Film[] = [];\n  categories: Category[] = [];\n\n  constructor(private filmController: FilmsController) {\n    addIcons({\n      locateOutline,\n      notificationsOutline,\n      optionsOutline,\n      locationOutline,\n      arrowForwardOutline\n    });\n  }\n\n  async ngOnInit() {\n    this.upcomingEvents = await this.filmController.getUpcomingEvents();\n    this.currentFilms = await this.filmController.fetchAllFilms();\n    this.categories = [...categories];\n    await this.filmController.getUser();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\n  background: var(--ion-color-light);\n\n  &__toolbar {\n    --background: url('/assets/imgs/header.png') no-repeat center center/cover;\n    border-bottom-left-radius: 25px;\n    border-bottom-right-radius: 25px;\n\n    &.wrapper {\n      ion-item,\n      ion-toolbar.srchBar {\n        --background: transparent;\n      }\n    }\n  }\n\n  &__location {\n    margin: 3.5vh 0;\n\n      ion-icon {\n        margin-right: 3px;\n      }\n\n      &-info {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n      }\n\n      &-city {\n        margin-top: 3px;\n        font-size: 1.8rem;\n        color: #fff;\n        font-weight: bold;\n      }\n    \n  }\n\n  &__notification-button {\n    --background: #fff;\n    ion-badge {\n      color: var(--ion-color-primary);\n      position: absolute;\n        top: 0;\n        right: 0;\n        margin-top: 0.45rem;\n        margin-right: 0.45rem;\n        font-size: 0.1rem;\n        padding: 0.25rem !important;\n        border-radius: 50px;\n    }\n  }\n\n  &__search-bar {\n    ion-row {\n      background: #fff;\n      border-radius: 25px;\n      margin: 5px 5px 8px 5px;\n\n      ion-col {\n        padding: 0;\n      }\n    }\n\n    ion-fab-button {\n      --box-shadow: none;\n\n      ion-icon {\n        font-size: 1.3rem;\n      }\n    }\n\n    ion-searchbar {\n      padding: 0;\n      --border-radius: 25px;\n      --background: #fff;\n    }\n  }\n}\n\n\nion-content {\n.upcoming-events {\n  background: transparent;\n\n  &__header {\n    font-size: 1.3rem;\n  }\n\n  &__card {\n    border-radius: 25px;\n    height: 8rem;\n    align-content: center;\n    margin: 15px 5px;\n  }\n\n\n  &__thumbnail {\n    width: 5.5rem;\n    height: 7rem;\n\n    ion-img {\n      --border-radius: 25px;\n    }\n  }\n\n\n\n  &__date {\n    font-size: 0.8rem;\n    color: gray;\n  }\n\n  &__title {\n    margin-top: 5px;\n    font-size: 1.2rem;\n    font-weight: bold;\n  }\n\n  &__location {\n    font-size: 0.85rem;\n    margin-top: 10px;\n\n    ion-icon {\n      margin-right: 3px;\n    }\n  }\n}\n\n.top-picks {\n\n  &__divider-icon {\n    margin-left: 5px;\n    height: 1rem;\n    width: 1rem;\n  }\n\n  &__button {\n    text-decoration: underline;\n  }\n\n  &__card {\n    height: 4rem;\n    align-content: center;\n    margin: 10px 5px 5px 5px;\n  }\n\n  &__avatar {\n    background: rgba(232, 31, 145, 0.1);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    ion-img {\n      height: 1.3rem;\n      width: 1.3rem;\n    }\n  }\n\n  &__label {\n    font-size: 0.8rem;\n    font-weight: 550;\n  }\n}\n\n.event-card {\n  height: 15rem;\n  margin: 15px 15px;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n  align-content: end;\n\n  &__item {\n    border-radius: 25px;\n    --background: rgba(47, 47, 47, 0.05);\n    backdrop-filter: blur(8px);\n    margin: 5px 5px 10px 5px;\n  }\n\n  &__label {\n    color: #fff;\n\n    &__title {\n      margin-top: 5px;\n      font-size: 1rem;\n      font-weight: bold;\n   \n    }\n  }\n\n  &__button {\n    --background: rgba(111, 105, 105, 0.254);\n  }\n\n  &__icon {\n    font-size: 1.3rem;\n  }\n}\n\n}",
                    "styleUrl": "home.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "filmController",
                        "type": "FilmsController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "filmController",
                        "type": "FilmsController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-header class=\"header\">\n  <ion-toolbar class=\"header__toolbar wrapper\">\n    <ion-item lines=\"none\" class=\"header__location\">\n      <ion-label color=\"light\" class=\"header__location-label\">\n        <div class=\"header__location-info\">\n          <ion-icon name=\"locate-outline\"></ion-icon>\n          <ion-text>Events near me</ion-text>\n        </div>\n        <p class=\"header__location-city\">Medellin, Colombia</p>\n      </ion-label>\n\n      <ion-fab-button size=\"small\" class=\"header__notification-button\">\n        <ion-icon class=\"header__notification-ic\"  name=\"notifications-outline\" color=\"medium\"></ion-icon>\n        <ion-badge>&#9679;</ion-badge>\n      </ion-fab-button>\n    </ion-item>\n\n    <ion-toolbar class=\"header__search-bar srchBar\" mode=\"ios\">\n      <ion-row>\n        <ion-col size=\"10\">\n          <ion-searchbar placeholder=\"Search events\"></ion-searchbar>\n        </ion-col>\n        <ion-col size=\"2\">\n          <ion-fab-button size=\"small\" color=\"light\">\n            <ion-icon name=\"options-outline\" color=\"medium\"></ion-icon>\n          </ion-fab-button>\n        </ion-col>\n      </ion-row>\n    </ion-toolbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content color=\"light\">\n  <ion-list class=\"upcoming-events\">\n    <ion-list-header class=\"upcoming-events__header\" mode=\"ios\"> Upcoming Events </ion-list-header>\n  \n    <swiper-container\n      #event_upcoming\n      class=\"upcoming-events__slider\"\n      [modules]=\"swiperModules\"\n      [slidesPerView]=\"1.35\"\n      [keyboard]=\"true\"\n      [centerSlides]=\"true\"\n    >\n      @for(event of upcomingEvents; track $index) {\n      <swiper-slide class=\"upcoming-events__slide\">\n        <ion-card\n          class=\"upcoming-events__card\"\n          [routerLink]=\"['/', 'home', 'events', event?._id]\"\n        >\n          <ion-item lines=\"none\" class=\"upcoming-events__item\">\n            <ion-thumbnail slot=\"start\" class=\"upcoming-events__thumbnail\">\n              <ion-img [src]=\"event.image\"></ion-img>\n            </ion-thumbnail>\n  \n            <ion-label class=\"upcoming-events__label\">\n              <ion-text class=\"upcoming-events__date\">\n                {{ event?.date | date: 'MMM d, y' }}\n              </ion-text>\n              <p class=\"upcoming-events__title\">\n                <ion-text color=\"dark\"> {{ event?.title }} </ion-text>\n              </p>\n              <p class=\"upcoming-events__location\">\n                <ion-icon name=\"location-outline\"></ion-icon>\n                {{ event?.channel }}\n              </p>\n            </ion-label>\n          </ion-item>\n        </ion-card>\n      </swiper-slide>\n      }\n    </swiper-container>\n  </ion-list>\n  \n\n  <ion-list class=\"top-picks\">\n    <ion-item-divider class=\"top-picks__divider\" mode=\"ios\" color=\"light\">\n      Top Picks\n      <img src=\"assets/imgs/fire.png\" class=\"top-picks__divider-icon\" />\n      <ion-button slot=\"end\" fill=\"clear\" color=\"medium\" class=\"top-picks__button\"> View All </ion-button>\n    </ion-item-divider>\n  \n    <swiper-container\n      #category\n      class=\"top-picks__slider\"\n      [modules]=\"swiperModules\"\n      [slidesPerView]=\"2.6\"\n      [keyboard]=\"true\"\n      [centerSlides]=\"true\"\n    >\n      <swiper-slide class=\"top-picks__slide\">\n        <ion-card class=\"top-picks__card\">\n          <ion-item lines=\"none\" class=\"top-picks__item\">\n            <ion-avatar slot=\"start\" class=\"top-picks__avatar\">\n              <ion-img [src]=\"'assets/imgs/all.png'\"></ion-img>\n            </ion-avatar>\n  \n            <ion-label class=\"top-picks__label\"> All </ion-label>\n          </ion-item>\n        </ion-card>\n      </swiper-slide>\n      @for(ctgory of categories; track $index) {\n      <swiper-slide class=\"top-picks__slide\">\n        <ion-card class=\"top-picks__card\">\n          <ion-item lines=\"none\" class=\"top-picks__item\">\n            <ion-avatar slot=\"start\" class=\"top-picks__avatar\">\n              <ion-img [src]=\"ctgory.image\"></ion-img>\n            </ion-avatar>\n  \n            <ion-label class=\"top-picks__label\"> {{ ctgory.name }} </ion-label>\n          </ion-item>\n        </ion-card>\n      </swiper-slide>\n      }\n    </swiper-container>\n  </ion-list>\n  \n  @for(event of currentFilms; track $index) {\n  \n    <ion-card\n    [routerLink]=\"['/', 'home', 'events', event?._id]\"\n    class=\"event-card\"\n    [style.backgroundImage]=\"'url('+ event.image +')'\"\n  >\n    <ion-item class=\"event-card__item\" lines=\"none\">\n      <ion-label class=\"event-card__label\">\n        \n          {{ event?.channel}}\n        <p class=\"event-card__title\">\n          {{ event?.title }}\n        </p>\n      </ion-label>\n  \n      <ion-fab-button class=\"event-card__button\" slot=\"end\" size=\"small\">\n        <ion-icon name=\"arrow-forward-outline\" class=\"event-card__icon\"></ion-icon>\n      </ion-fab-button>\n    </ion-item>\n  </ion-card>\n  \n  \n  }\n</ion-content>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "WelcomePage",
            "id": "component-WelcomePage-5f968097e1d37817322ec77495c588a3a9c8a538d27ba191f6c7e89fa349353aa88173466a2a0ab9b8960fea10c6de454a9939cd7068fa130be620c5698f2669",
            "file": "src/app/features/welcome/welcome.page.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-welcome",
            "styleUrls": [
                "./welcome.page.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./welcome.page.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onboardingScreens",
                    "defaultValue": "[\r\n    { image: '1.jpg' },\r\n    { image: '2.jpg' },\r\n    { image: '3.jpg' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "swiperModules",
                    "defaultValue": "[IonicSlides]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "IonText"
                },
                {
                    "name": "IonButton"
                },
                {
                    "name": "IonToolbar"
                },
                {
                    "name": "IonFooter"
                },
                {
                    "name": "IonContent"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "NgStyle"
                },
                {
                    "name": "GenericButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgStyle } from '@angular/common';\r\nimport { Component, CUSTOM_ELEMENTS_SCHEMA, OnInit } from '@angular/core';\r\nimport { RouterLink } from '@angular/router';\r\nimport { GenericButtonComponent } from '../../shared/components/generic-button/generic-button.component'; // Importar el componente\r\n\r\nimport {\r\n  IonContent,\r\n  IonFooter,\r\n  IonToolbar,\r\n  IonButton,\r\n  IonText,\r\n  IonicSlides,\r\n} from '@ionic/angular/standalone';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.page.html',\r\n  styleUrls: ['./welcome.page.scss'],\r\n  standalone: true,\r\n  imports: [\r\n    IonText,\r\n    IonButton,\r\n    IonToolbar,\r\n    IonFooter,\r\n    IonContent,\r\n    RouterLink,\r\n    NgStyle,\r\n    GenericButtonComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class WelcomePage implements OnInit {\r\n  onboardingScreens = [\r\n    { image: '1.jpg' },\r\n    { image: '2.jpg' },\r\n    { image: '3.jpg' },\r\n  ];\r\n  swiperModules = [IonicSlides];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ion-content {\r\n    swiper-container {\r\n        --swiper-pagination-color: var(--ion-color-primary);\r\n        height: 100%;\r\n        div {\r\n            height: 100%;\r\n            background-position: center;\r\n            background-size: cover;\r\n            background-repeat: no-repeat;\r\n        }\r\n    }\r\n}\r\n\r\nswiper-container::part(bullet-active) {\r\n    margin-bottom: 1vh;\r\n    width: 40px;\r\n    border-radius: 4px;\r\n}\r\nswiper-container::part(bullet) {\r\n    margin-bottom: 1vh;\r\n    width: 15px;\r\n    border-radius: 4px;\r\n    background: #fff;\r\n    opacity: 1;\r\n}\r\n\r\nion-footer {\r\n    ion-toolbar {\r\n        --background: #000;\r\n        padding: 10px;\r\n        ion-button {\r\n            ion-text {\r\n                font-size: 0.9rem;\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./welcome.page.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 38
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ion-content [fullscreen]=\"true\" color=\"dark\">\r\n  <swiper-container\r\n    #onboarding\r\n    [modules]=\"swiperModules\"\r\n    [pagination]=\"{clickable: true}\"\r\n    [keyboard]=\"true\"\r\n    autoplay=\"true\"\r\n  >\r\n    @for(screen of onboardingScreens; track $index) {\r\n    <swiper-slide>\r\n      <div\r\n        [ngStyle]=\"{'background-image' : 'url(./assets/onboarding_screens/' + screen?.image + ')'}\"\r\n      ></div>\r\n    </swiper-slide>\r\n    }\r\n  </swiper-container>\r\n</ion-content>\r\n<ion-footer class=\"ion-no-border\">\r\n  <ion-toolbar>\r\n    <app-generic-button\r\n    expand=\"block\"\r\n    shape=\"round\"\r\n    color=\"primary\"\r\n    size=\"large\"\r\n    [strong]=\"true\"\r\n    routerLink=\"/home\"\r\n  >\r\n    <ion-text>Get Started</ion-text>\r\n  </app-generic-button>\r\n  </ion-toolbar>\r\n</ion-footer>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "categories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/data/categories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Category[]",
                "defaultValue": "[\r\n    {\r\n      id: '1',\r\n      name: 'Music',\r\n      image: 'assets/imgs/music.png',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Film',\r\n      image: 'assets/imgs/film.png',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Comedy',\r\n      image: 'assets/imgs/comedy.png',\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Books',\r\n      image: 'assets/imgs/book.png',\r\n    },\r\n  ]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "handlers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/mocks/handlers.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  http.get('/user', () => {\r\n    console.log('Handler invocado para /user');\r\n    return HttpResponse.json({\r\n      id: 'c7b3d8e0-5e0b-4b0f-8b3a-3b9f4b3d3b3d',\r\n      firstName: 'John',\r\n      lastName: 'Maverick',\r\n    })\r\n  })\r\n]"
            },
            {
                "name": "worker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/mocks/browser.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "setupWorker(...handlers)"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/data/categories.ts": [
                {
                    "name": "categories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/data/categories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Category[]",
                    "defaultValue": "[\r\n    {\r\n      id: '1',\r\n      name: 'Music',\r\n      image: 'assets/imgs/music.png',\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Film',\r\n      image: 'assets/imgs/film.png',\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Comedy',\r\n      image: 'assets/imgs/comedy.png',\r\n    },\r\n    {\r\n      id: '4',\r\n      name: 'Books',\r\n      image: 'assets/imgs/book.png',\r\n    },\r\n  ]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/mocks/handlers.ts": [
                {
                    "name": "handlers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/mocks/handlers.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  http.get('/user', () => {\r\n    console.log('Handler invocado para /user');\r\n    return HttpResponse.json({\r\n      id: 'c7b3d8e0-5e0b-4b0f-8b3a-3b9f4b3d3b3d',\r\n      firstName: 'John',\r\n      lastName: 'Maverick',\r\n    })\r\n  })\r\n]"
                }
            ],
            "src/mocks/browser.ts": [
                {
                    "name": "worker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/mocks/browser.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "setupWorker(...handlers)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/data/categories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "categories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interfaces/category.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Category",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interfaces/film.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Film",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/films-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FilmsServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/home/event/event.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "EventPage",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/home/home.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePage",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/welcome/welcome.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomePage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/headless/films.controller.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FilmsController",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/generic-button/generic-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GenericButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/mocks/browser.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "worker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/mocks/handlers.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "handlers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}